{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "RegisterPair",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "acceptPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "partners",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "partner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_partner",
          "type": "address"
        }
      ],
      "name": "registerPartner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "rejectPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount2",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Interfaces/IERC20.sol",
    "1": "contracts/TokenSwap.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenSwap.sol",
    "exportedSymbols": {
      "IERC20": [
        77
      ],
      "TokenSwap": [
        434
      ]
    },
    "id": 435,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 79,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "contracts/Interfaces/IERC20.sol",
        "file": "./Interfaces/IERC20.sol",
        "id": 80,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 435,
        "sourceUnit": 78,
        "src": "56:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 434,
        "linearizedBaseContracts": [
          434
        ],
        "name": "TokenSwap",
        "nameLocation": "626:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TokenSwap.Pair",
            "id": 88,
            "members": [
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "961:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 88,
                "src": "954:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$77",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 82,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 81,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 77,
                    "src": "954:6:1"
                  },
                  "referencedDeclaration": 77,
                  "src": "954:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$77",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "partner",
                "nameLocation": "984:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 88,
                "src": "976:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 84,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "976:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "allowed",
                "nameLocation": "1006:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 88,
                "src": "1001:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 86,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1001:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nameLocation": "935:4:1",
            "nodeType": "StructDefinition",
            "scope": 434,
            "src": "928:92:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95c33652",
            "id": 93,
            "mutability": "mutable",
            "name": "partners",
            "nameLocation": "1180:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 434,
            "src": "1148:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
              "typeString": "mapping(address => struct TokenSwap.Pair)"
            },
            "typeName": {
              "id": 92,
              "keyType": {
                "id": 89,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1156:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1148:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                "typeString": "mapping(address => struct TokenSwap.Pair)"
              },
              "valueType": {
                "id": 91,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 90,
                  "name": "Pair",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "1167:4:1"
                },
                "referencedDeclaration": 88,
                "src": "1167:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$88_storage_ptr",
                  "typeString": "struct TokenSwap.Pair"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 101,
            "name": "RegisterPair",
            "nameLocation": "1280:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1293:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1302:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1311:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:27:1"
            },
            "src": "1274:46:1"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1499:84:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 104,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1517:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1517:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1539:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1531:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 106,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1531:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1517:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612076616c69642073656e6465722e",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48659ee00a68742647b1f057c6b4d9420d196d9525d6c55de32e34e2940f0389",
                          "typeString": "literal_string \"Not a valid sender.\""
                        },
                        "value": "Not a valid sender."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48659ee00a68742647b1f057c6b4d9420d196d9525d6c55de32e34e2940f0389",
                          "typeString": "literal_string \"Not a valid sender.\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1509:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1509:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:56:1"
                },
                {
                  "id": 114,
                  "nodeType": "PlaceholderStatement",
                  "src": "1575:1:1"
                }
              ]
            },
            "id": 116,
            "name": "isValidSender",
            "nameLocation": "1479:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1492:2:1"
            },
            "src": "1470:113:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1826:108:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 125,
                          "name": "__token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1844:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1863:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1855:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 126,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1855:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1844:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        },
                        "value": "Invalid token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1836:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:47:1"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "initalized_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1893:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 136,
                          "name": "__token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1919:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 135,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1912:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1912:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1893:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:34:1"
                }
              ]
            },
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiateToken",
            "nameLocation": "1745:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "__token",
                  "nameLocation": "1767:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1759:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:17:1"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "initalized_token",
                  "nameLocation": "1804:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1797:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$77",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 121,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 120,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 77,
                      "src": "1797:6:1"
                    },
                    "referencedDeclaration": 77,
                    "src": "1797:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:25:1"
            },
            "scope": 434,
            "src": "1736:198:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2099:105:1",
              "statements": [
                {
                  "assignments": [
                    150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "ini_token",
                      "nameLocation": "2116:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "2109:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 149,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 148,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 77,
                          "src": "2109:6:1"
                        },
                        "referencedDeclaration": 77,
                        "src": "2109:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 152,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2142:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 151,
                      "name": "initiateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2128:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_contract$_IERC20_$77_$",
                        "typeString": "function (address) pure returns (contract IERC20)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2109:40:1"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 155,
                          "name": "partners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "2159:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                            "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                          }
                        },
                        "id": 158,
                        "indexExpression": {
                          "expression": {
                            "id": 156,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2168:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2168:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2159:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$88_storage",
                          "typeString": "struct TokenSwap.Pair storage ref"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "2159:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 160,
                      "name": "ini_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2188:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2159:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:38:1"
                }
              ]
            },
            "functionSelector": "4420e486",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "2081:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2081:13:1"
              }
            ],
            "name": "register",
            "nameLocation": "2049:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2066:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2058:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2057:16:1"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:1"
            },
            "scope": 434,
            "src": "2040:164:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "2547:397:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 172,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "2565:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                                "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                              }
                            },
                            "id": 175,
                            "indexExpression": {
                              "expression": {
                                "id": 173,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2574:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2574:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2565:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$88_storage",
                              "typeString": "struct TokenSwap.Pair storage ref"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "partner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "2565:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2605:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2597:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 177,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2597:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2597:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2565:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176652061207061697220616c72656164792c20636c6f73652069742e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2609:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83cecb3ed34fb6c6dbcfd895a9a727e3ce1b59e71aa191403239ac92f93e1dc2",
                          "typeString": "literal_string \"You have a pair already, close it.\""
                        },
                        "value": "You have a pair already, close it."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83cecb3ed34fb6c6dbcfd895a9a727e3ce1b59e71aa191403239ac92f93e1dc2",
                          "typeString": "literal_string \"You have a pair already, close it.\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2557:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:89:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 186,
                          "name": "_partner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "2664:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2684:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2676:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 187,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2676:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2676:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2664:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420706172746e6572732061646472657373",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2688:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1e5d349a6b6acaed465b5876d1656146b2aecf1570ecad710649365d32ac647",
                          "typeString": "literal_string \"Invalid partners address\""
                        },
                        "value": "Invalid partners address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1e5d349a6b6acaed465b5876d1656146b2aecf1570ecad710649365d32ac647",
                          "typeString": "literal_string \"Invalid partners address\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2656:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2656:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2733:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2733:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 198,
                          "name": "_partner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "2747:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2733:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f7420626520796f7572206f776e20706172746e657273",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2757:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6cc4e7a49f9193d5d1e98e2a494da5ec30ccef2a01c16c6cd45b6d58cb327ac4",
                          "typeString": "literal_string \"You cannot be your own partners\""
                        },
                        "value": "You cannot be your own partners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6cc4e7a49f9193d5d1e98e2a494da5ec30ccef2a01c16c6cd45b6d58cb327ac4",
                          "typeString": "literal_string \"You cannot be your own partners\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2725:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2725:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 204,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "2809:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                                "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                              }
                            },
                            "id": 206,
                            "indexExpression": {
                              "id": 205,
                              "name": "_partner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "2818:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2809:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$88_storage",
                              "typeString": "struct TokenSwap.Pair storage ref"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "2809:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2852:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2844:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 209,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2844:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2844:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 208,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "2837:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2837:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2809:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172746e657220696e6578697374656e742e",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2857:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ee7000ab1e7fd03c565e2884f9aa7e699341a2e117cec2c93a347f2d7f8a41",
                          "typeString": "literal_string \"Partner inexistent.\""
                        },
                        "value": "Partner inexistent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ee7000ab1e7fd03c565e2884f9aa7e699341a2e117cec2c93a347f2d7f8a41",
                          "typeString": "literal_string \"Partner inexistent.\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2801:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:78:1"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 218,
                          "name": "partners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "2898:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                            "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "expression": {
                            "id": 219,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2907:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2907:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2898:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$88_storage",
                          "typeString": "struct TokenSwap.Pair storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "partner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "2898:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 223,
                      "name": "_partner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2929:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2898:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:39:1"
                }
              ]
            },
            "functionSelector": "08f7fbbe",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 168,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "2529:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2529:13:1"
              }
            ],
            "name": "registerPartner",
            "nameLocation": "2488:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "_partner",
                  "nameLocation": "2512:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2504:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2503:18:1"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2547:0:1"
            },
            "scope": 434,
            "src": "2479:465:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "3270:199:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 235,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "3288:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3308:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3300:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3300:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3300:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3288:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320697320696e76616c6964",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3312:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe39ab4bd4a6b0a72eae3d4de2f196129958848c8528bc8645907f8c48eb5bbc",
                          "typeString": "literal_string \"Address is invalid\""
                        },
                        "value": "Address is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe39ab4bd4a6b0a72eae3d4de2f196129958848c8528bc8645907f8c48eb5bbc",
                          "typeString": "literal_string \"Address is invalid\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3280:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3280:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 245,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "3351:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                                "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                              }
                            },
                            "id": 247,
                            "indexExpression": {
                              "id": 246,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "3360:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3351:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$88_storage",
                              "typeString": "struct TokenSwap.Pair storage ref"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "partner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "3351:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3381:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3381:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3351:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420706172746e657273732e",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3393:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ea73e3d218c494d95f3e2c9d0b0e6e13be82a17c5995f52f66bf198b672e21b",
                          "typeString": "literal_string \"You are not partnerss.\""
                        },
                        "value": "You are not partnerss."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ea73e3d218c494d95f3e2c9d0b0e6e13be82a17c5995f52f66bf198b672e21b",
                          "typeString": "literal_string \"You are not partnerss.\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3343:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:75:1"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 255,
                          "name": "partners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "3429:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                            "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                          }
                        },
                        "id": 257,
                        "indexExpression": {
                          "id": 256,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "3438:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3429:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$88_storage",
                          "typeString": "struct TokenSwap.Pair storage ref"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "3429:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3458:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3429:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:33:1"
                }
              ]
            },
            "functionSelector": "c32c402e",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 231,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "3252:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:13:1"
              }
            ],
            "name": "acceptPair",
            "nameLocation": "3216:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3235:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "3227:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3227:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3226:18:1"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3270:0:1"
            },
            "scope": 434,
            "src": "3207:262:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "3796:200:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 271,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "3814:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3834:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3826:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3826:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3826:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3814:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320697320696e76616c6964",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3838:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe39ab4bd4a6b0a72eae3d4de2f196129958848c8528bc8645907f8c48eb5bbc",
                          "typeString": "literal_string \"Address is invalid\""
                        },
                        "value": "Address is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe39ab4bd4a6b0a72eae3d4de2f196129958848c8528bc8645907f8c48eb5bbc",
                          "typeString": "literal_string \"Address is invalid\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3806:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3806:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3806:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 281,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "3877:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                                "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                              }
                            },
                            "id": 283,
                            "indexExpression": {
                              "id": 282,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "3886:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3877:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$88_storage",
                              "typeString": "struct TokenSwap.Pair storage ref"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "partner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "3877:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 285,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3907:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3907:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3877:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420706172746e657273732e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3919:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ea73e3d218c494d95f3e2c9d0b0e6e13be82a17c5995f52f66bf198b672e21b",
                          "typeString": "literal_string \"You are not partnerss.\""
                        },
                        "value": "You are not partnerss."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ea73e3d218c494d95f3e2c9d0b0e6e13be82a17c5995f52f66bf198b672e21b",
                          "typeString": "literal_string \"You are not partnerss.\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3869:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3869:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3869:75:1"
                },
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 291,
                          "name": "partners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "3955:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                            "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                          }
                        },
                        "id": 293,
                        "indexExpression": {
                          "id": 292,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "3964:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3955:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$88_storage",
                          "typeString": "struct TokenSwap.Pair storage ref"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "3955:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3984:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3955:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "3955:34:1"
                }
              ]
            },
            "functionSelector": "63a53f3e",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 268,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 267,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "3778:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3778:13:1"
              }
            ],
            "name": "rejectPair",
            "nameLocation": "3742:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3761:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "3753:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3753:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3752:18:1"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3796:0:1"
            },
            "scope": 434,
            "src": "3733:263:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "4518:881:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 309,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "4536:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                                "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "expression": {
                                "id": 310,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4545:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4545:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4536:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$88_storage",
                              "typeString": "struct TokenSwap.Pair storage ref"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "partner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "4536:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4576:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4568:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4568:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4568:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4536:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f20706172746e657220666f72207468697320737761702e",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4580:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11f9c4ad20abd136457ad95a355801d7a0c1c7c12a5b474271d7889e7fce3e05",
                          "typeString": "literal_string \"You have no partner for this swap.\""
                        },
                        "value": "You have no partner for this swap."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11f9c4ad20abd136457ad95a355801d7a0c1c7c12a5b474271d7889e7fce3e05",
                          "typeString": "literal_string \"You have no partner for this swap.\""
                        }
                      ],
                      "id": 308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4528:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4528:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "4528:89:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 323,
                            "name": "partners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "4635:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                              "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                            }
                          },
                          "id": 326,
                          "indexExpression": {
                            "expression": {
                              "id": 324,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4644:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4644:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4635:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pair_$88_storage",
                            "typeString": "struct TokenSwap.Pair storage ref"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87,
                        "src": "4635:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420616c6c6f77656420746f2e",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4665:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2933e24cf769262c97468b3e263fd295ca5b2b0c58918eaf2c1176c1950565bd",
                          "typeString": "literal_string \"You are not allowed to.\""
                        },
                        "value": "You are not allowed to."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2933e24cf769262c97468b3e263fd295ca5b2b0c58918eaf2c1176c1950565bd",
                          "typeString": "literal_string \"You are not allowed to.\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4627:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:64:1"
                },
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "_partner",
                      "nameLocation": "4711:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "4703:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4703:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 333,
                        "name": "partners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "4722:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                          "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4731:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4731:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4722:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$88_storage",
                        "typeString": "struct TokenSwap.Pair storage ref"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "partner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 85,
                    "src": "4722:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4703:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 340,
                              "name": "partners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "4768:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                                "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                              }
                            },
                            "id": 342,
                            "indexExpression": {
                              "id": 341,
                              "name": "_partner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "4777:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4768:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$88_storage",
                              "typeString": "struct TokenSwap.Pair storage ref"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "4768:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4811:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4803:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 345,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4803:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4803:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 344,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "4796:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4796:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4768:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220706172746e657220686173206e6f20746f6b656e732e",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4816:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f6a2d13cc16e3f4a94da3f380f30e1edbbb8223e47af95829e0bd180ae638e3",
                          "typeString": "literal_string \"Your partner has no tokens.\""
                        },
                        "value": "Your partner has no tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f6a2d13cc16e3f4a94da3f380f30e1edbbb8223e47af95829e0bd180ae638e3",
                          "typeString": "literal_string \"Your partner has no tokens.\""
                        }
                      ],
                      "id": 339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4760:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4760:86:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4760:86:1"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4865:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "4857:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4857:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 358,
                  "initialValue": {
                    "expression": {
                      "id": 356,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4873:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4873:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4857:26:1"
                },
                {
                  "assignments": [
                    361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "4901:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "4894:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 360,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 359,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 77,
                          "src": "4894:6:1"
                        },
                        "referencedDeclaration": 77,
                        "src": "4894:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 362,
                        "name": "partners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "4910:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                          "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                        }
                      },
                      "id": 364,
                      "indexExpression": {
                        "id": 363,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "4919:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4910:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$88_storage",
                        "typeString": "struct TokenSwap.Pair storage ref"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83,
                    "src": "4910:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4894:37:1"
                },
                {
                  "assignments": [
                    369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "token2",
                      "nameLocation": "4948:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "4941:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 368,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 367,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 77,
                          "src": "4941:6:1"
                        },
                        "referencedDeclaration": 77,
                        "src": "4941:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 370,
                        "name": "partners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "4957:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Pair_$88_storage_$",
                          "typeString": "mapping(address => struct TokenSwap.Pair storage ref)"
                        }
                      },
                      "id": 372,
                      "indexExpression": {
                        "id": 371,
                        "name": "_partner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "4966:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4957:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$88_storage",
                        "typeString": "struct TokenSwap.Pair storage ref"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83,
                    "src": "4957:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4941:40:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 378,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "5017:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 381,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5032:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$434",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$434",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5024:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 379,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5024:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5024:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 376,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "5000:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "5000:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5000:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 384,
                          "name": "_amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "5042:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5000:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e203120416c6c6f77616e6365203e20616d6f756e742e",
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5052:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_469d4f9eb8e8d49f29354baa0c4a0336c5f3c680a2954fe6e441cafed07d95cd",
                          "typeString": "literal_string \"Token 1 Allowance > amount.\""
                        },
                        "value": "Token 1 Allowance > amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_469d4f9eb8e8d49f29354baa0c4a0336c5f3c680a2954fe6e441cafed07d95cd",
                          "typeString": "literal_string \"Token 1 Allowance > amount.\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4992:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4992:90:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "4992:90:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 392,
                              "name": "_partner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "5117:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 395,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5135:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$434",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$434",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5127:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 393,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5127:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5127:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 390,
                              "name": "token2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "5100:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "5100:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5100:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 398,
                          "name": "_amount2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "5145:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5100:53:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e203220416c6c6f77616e6365203e20616d6f756e742e",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5155:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8d017b498b16d7ea84efb2bee13742289a6df0fc9f1f3647d913b831df6de13",
                          "typeString": "literal_string \"Token 2 Allowance > amount.\""
                        },
                        "value": "Token 2 Allowance > amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8d017b498b16d7ea84efb2bee13742289a6df0fc9f1f3647d913b831df6de13",
                          "typeString": "literal_string \"Token 2 Allowance > amount.\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5092:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5092:93:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "5092:93:1"
                },
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "s1",
                      "nameLocation": "5201:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "5196:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5196:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 407,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5226:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 408,
                        "name": "_partner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "5233:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 409,
                        "name": "_amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "5243:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 405,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "5206:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5206:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5206:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5196:56:1"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "s2",
                      "nameLocation": "5267:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "5262:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5262:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 420,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 416,
                        "name": "_partner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "5292:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 417,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5302:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 418,
                        "name": "_amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "5309:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 414,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "5272:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5272:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5272:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5262:56:1"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "5334:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "5329:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 421,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5329:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 423,
                      "name": "s1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "5341:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 424,
                      "name": "s2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "5347:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5341:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5329:20:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 428,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "5368:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206e6f742073656e742e",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5374:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4b26de17abe50cf85f35bd7e87038c064de7c62c15bc273e7ff99f09f963ec5",
                          "typeString": "literal_string \"Token not sent.\""
                        },
                        "value": "Token not sent."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4b26de17abe50cf85f35bd7e87038c064de7c62c15bc273e7ff99f09f963ec5",
                          "typeString": "literal_string \"Token not sent.\""
                        }
                      ],
                      "id": 427,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5360:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5360:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "5360:32:1"
                }
              ]
            },
            "functionSelector": "d96073cf",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 305,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "4500:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4500:13:1"
              }
            ],
            "name": "swap",
            "nameLocation": "4452:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "_amount1",
                  "nameLocation": "4465:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4457:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4457:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_amount2",
                  "nameLocation": "4483:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4475:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4475:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4456:36:1"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4518:0:1"
            },
            "scope": 434,
            "src": "4443:956:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 435,
        "src": "617:4784:1",
        "usedErrors": []
      }
    ],
    "src": "32:5369:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50610afa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806308f7fbbe146100675780634420e4861461007c57806363a53f3e1461008f57806395c33652146100a2578063c32c402e1461010e578063d96073cf14610121575b600080fd5b61007a610075366004610a0a565b610134565b005b61007a61008a366004610a0a565b61030c565b61007a61009d366004610a0a565b610365565b6100e26100b0366004610a0a565b600060208190529081526040902080546001909101546001600160a01b0391821691811690600160a01b900460ff1683565b604080516001600160a01b03948516815293909216602084015215159082015260600160405180910390f35b61007a61011c366004610a0a565b610459565b61007a61012f366004610a3a565b610553565b3361015a5760405162461bcd60e51b815260040161015190610a5c565b60405180910390fd5b336000908152602081905260409020600101546001600160a01b0316156101ce5760405162461bcd60e51b815260206004820152602260248201527f596f7520686176652061207061697220616c72656164792c20636c6f736520696044820152613a1760f11b6064820152608401610151565b6001600160a01b0381166102245760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420706172746e657273206164647265737300000000000000006044820152606401610151565b336001600160a01b038216141561027d5760405162461bcd60e51b815260206004820152601f60248201527f596f752063616e6e6f7420626520796f7572206f776e20706172746e657273006044820152606401610151565b6001600160a01b03818116600090815260208190526040902054166102da5760405162461bcd60e51b81526020600482015260136024820152722830b93a3732b91034b732bc34b9ba32b73a1760691b6044820152606401610151565b33600090815260208190526040902060010180546001600160a01b0319166001600160a01b0392909216919091179055565b336103295760405162461bcd60e51b815260040161015190610a5c565b6000610334826109be565b33600090815260208190526040902080546001600160a01b0319166001600160a01b03929092169190911790555050565b336103825760405162461bcd60e51b815260040161015190610a5c565b6001600160a01b0381166103cd5760405162461bcd60e51b81526020600482015260126024820152711059191c995cdcc81a5cc81a5b9d985b1a5960721b6044820152606401610151565b6001600160a01b038181166000908152602081905260409020600101541633146104325760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103830b93a3732b939b99760511b6044820152606401610151565b6001600160a01b03166000908152602081905260409020600101805460ff60a01b19169055565b336104765760405162461bcd60e51b815260040161015190610a5c565b6001600160a01b0381166104c15760405162461bcd60e51b81526020600482015260126024820152711059191c995cdcc81a5cc81a5b9d985b1a5960721b6044820152606401610151565b6001600160a01b038181166000908152602081905260409020600101541633146105265760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103830b93a3732b939b99760511b6044820152606401610151565b6001600160a01b03166000908152602081905260409020600101805460ff60a01b1916600160a01b179055565b336105705760405162461bcd60e51b815260040161015190610a5c565b336000908152602081905260409020600101546001600160a01b03166105e35760405162461bcd60e51b815260206004820152602260248201527f596f752068617665206e6f20706172746e657220666f72207468697320737761604482015261381760f11b6064820152608401610151565b33600090815260208190526040902060010154600160a01b900460ff1661064c5760405162461bcd60e51b815260206004820152601760248201527f596f7520617265206e6f7420616c6c6f77656420746f2e0000000000000000006044820152606401610151565b33600090815260208190526040808220600101546001600160a01b0390811680845291909220549091166106c25760405162461bcd60e51b815260206004820152601b60248201527f596f757220706172746e657220686173206e6f20746f6b656e732e00000000006044820152606401610151565b33600081815260208190526040808220546001600160a01b03858116845292829020549151636eb1769f60e11b8152600481018590523060248201529083169291909116908690839063dd62ed3e90604401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190610a89565b10156107a35760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e203120416c6c6f77616e6365203e20616d6f756e742e00000000006044820152606401610151565b604051636eb1769f60e11b81526001600160a01b03858116600483015230602483015286919083169063dd62ed3e90604401602060405180830381865afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190610a89565b10156108645760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e203220416c6c6f77616e6365203e20616d6f756e742e00000000006044820152606401610151565b6040516323b872dd60e01b81526001600160a01b038481166004830152858116602483015260448201889052600091908416906323b872dd906064016020604051808303816000875af11580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e39190610aa2565b6040516323b872dd60e01b81526001600160a01b0387811660048301528681166024830152604482018a90529192506000918416906323b872dd906064016020604051808303816000875af1158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190610aa2565b905060008280156109725750815b9050806109b35760405162461bcd60e51b815260206004820152600f60248201526e2a37b5b2b7103737ba1039b2b73a1760891b6044820152606401610151565b505050505050505050565b60006001600160a01b038216610a065760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610151565b5090565b600060208284031215610a1c57600080fd5b81356001600160a01b0381168114610a3357600080fd5b9392505050565b60008060408385031215610a4d57600080fd5b50508035926020909101359150565b6020808252601390820152722737ba1030903b30b634b21039b2b73232b91760691b604082015260600190565b600060208284031215610a9b57600080fd5b5051919050565b600060208284031215610ab457600080fd5b81518015158114610a3357600080fdfea26469706673582212204075e35c27813271a37c46b8d0eef935cd24eca0adb85cf1ad9c7188b843361364736f6c634300080c0033",
  "bytecodeSha1": "b9ec5d4a620e58790abd6303d45e01c06b73402e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "TokenSwap",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "TokenSwap.acceptPair": {
          "25": [
            3288,
            3310,
            true
          ],
          "26": [
            3351,
            3391,
            true
          ]
        },
        "TokenSwap.initiateToken": {
          "31": [
            1844,
            1865,
            true
          ]
        },
        "TokenSwap.registerPartner": {
          "20": [
            2565,
            2607,
            true
          ],
          "21": [
            2664,
            2686,
            true
          ],
          "22": [
            2733,
            2755,
            true
          ]
        },
        "TokenSwap.rejectPair": {
          "23": [
            3814,
            3836,
            true
          ],
          "24": [
            3877,
            3917,
            true
          ]
        },
        "TokenSwap.swap": {
          "27": [
            4635,
            4663,
            true
          ],
          "28": [
            5000,
            5050,
            true
          ],
          "29": [
            5100,
            5153,
            true
          ],
          "30": [
            5368,
            5372,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "TokenSwap.acceptPair": {
          "9": [
            3280,
            3333
          ],
          "10": [
            3343,
            3418
          ],
          "11": [
            3429,
            3462
          ]
        },
        "TokenSwap.initiateToken": {
          "18": [
            1836,
            1883
          ],
          "19": [
            1893,
            1927
          ]
        },
        "TokenSwap.register": {
          "5": [
            2159,
            2197
          ]
        },
        "TokenSwap.registerPartner": {
          "0": [
            2557,
            2646
          ],
          "1": [
            2656,
            2715
          ],
          "2": [
            2725,
            2791
          ],
          "3": [
            2801,
            2879
          ],
          "4": [
            2898,
            2937
          ]
        },
        "TokenSwap.rejectPair": {
          "6": [
            3806,
            3859
          ],
          "7": [
            3869,
            3944
          ],
          "8": [
            3955,
            3989
          ]
        },
        "TokenSwap.swap": {
          "12": [
            4528,
            4617
          ],
          "13": [
            4627,
            4691
          ],
          "14": [
            4760,
            4846
          ],
          "15": [
            4992,
            5082
          ],
          "16": [
            5092,
            5185
          ],
          "17": [
            5360,
            5392
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c806308f7fbbe146100675780634420e4861461007c57806363a53f3e1461008f57806395c33652146100a2578063c32c402e1461010e578063d96073cf14610121575b600080fd5b61007a610075366004610a0a565b610134565b005b61007a61008a366004610a0a565b61030c565b61007a61009d366004610a0a565b610365565b6100e26100b0366004610a0a565b600060208190529081526040902080546001909101546001600160a01b0391821691811690600160a01b900460ff1683565b604080516001600160a01b03948516815293909216602084015215159082015260600160405180910390f35b61007a61011c366004610a0a565b610459565b61007a61012f366004610a3a565b610553565b3361015a5760405162461bcd60e51b815260040161015190610a5c565b60405180910390fd5b336000908152602081905260409020600101546001600160a01b0316156101ce5760405162461bcd60e51b815260206004820152602260248201527f596f7520686176652061207061697220616c72656164792c20636c6f736520696044820152613a1760f11b6064820152608401610151565b6001600160a01b0381166102245760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420706172746e657273206164647265737300000000000000006044820152606401610151565b336001600160a01b038216141561027d5760405162461bcd60e51b815260206004820152601f60248201527f596f752063616e6e6f7420626520796f7572206f776e20706172746e657273006044820152606401610151565b6001600160a01b03818116600090815260208190526040902054166102da5760405162461bcd60e51b81526020600482015260136024820152722830b93a3732b91034b732bc34b9ba32b73a1760691b6044820152606401610151565b33600090815260208190526040902060010180546001600160a01b0319166001600160a01b0392909216919091179055565b336103295760405162461bcd60e51b815260040161015190610a5c565b6000610334826109be565b33600090815260208190526040902080546001600160a01b0319166001600160a01b03929092169190911790555050565b336103825760405162461bcd60e51b815260040161015190610a5c565b6001600160a01b0381166103cd5760405162461bcd60e51b81526020600482015260126024820152711059191c995cdcc81a5cc81a5b9d985b1a5960721b6044820152606401610151565b6001600160a01b038181166000908152602081905260409020600101541633146104325760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103830b93a3732b939b99760511b6044820152606401610151565b6001600160a01b03166000908152602081905260409020600101805460ff60a01b19169055565b336104765760405162461bcd60e51b815260040161015190610a5c565b6001600160a01b0381166104c15760405162461bcd60e51b81526020600482015260126024820152711059191c995cdcc81a5cc81a5b9d985b1a5960721b6044820152606401610151565b6001600160a01b038181166000908152602081905260409020600101541633146105265760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103830b93a3732b939b99760511b6044820152606401610151565b6001600160a01b03166000908152602081905260409020600101805460ff60a01b1916600160a01b179055565b336105705760405162461bcd60e51b815260040161015190610a5c565b336000908152602081905260409020600101546001600160a01b03166105e35760405162461bcd60e51b815260206004820152602260248201527f596f752068617665206e6f20706172746e657220666f72207468697320737761604482015261381760f11b6064820152608401610151565b33600090815260208190526040902060010154600160a01b900460ff1661064c5760405162461bcd60e51b815260206004820152601760248201527f596f7520617265206e6f7420616c6c6f77656420746f2e0000000000000000006044820152606401610151565b33600090815260208190526040808220600101546001600160a01b0390811680845291909220549091166106c25760405162461bcd60e51b815260206004820152601b60248201527f596f757220706172746e657220686173206e6f20746f6b656e732e00000000006044820152606401610151565b33600081815260208190526040808220546001600160a01b03858116845292829020549151636eb1769f60e11b8152600481018590523060248201529083169291909116908690839063dd62ed3e90604401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190610a89565b10156107a35760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e203120416c6c6f77616e6365203e20616d6f756e742e00000000006044820152606401610151565b604051636eb1769f60e11b81526001600160a01b03858116600483015230602483015286919083169063dd62ed3e90604401602060405180830381865afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190610a89565b10156108645760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e203220416c6c6f77616e6365203e20616d6f756e742e00000000006044820152606401610151565b6040516323b872dd60e01b81526001600160a01b038481166004830152858116602483015260448201889052600091908416906323b872dd906064016020604051808303816000875af11580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e39190610aa2565b6040516323b872dd60e01b81526001600160a01b0387811660048301528681166024830152604482018a90529192506000918416906323b872dd906064016020604051808303816000875af1158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190610aa2565b905060008280156109725750815b9050806109b35760405162461bcd60e51b815260206004820152600f60248201526e2a37b5b2b7103737ba1039b2b73a1760891b6044820152606401610151565b505050505050505050565b60006001600160a01b038216610a065760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610151565b5090565b600060208284031215610a1c57600080fd5b81356001600160a01b0381168114610a3357600080fd5b9392505050565b60008060408385031215610a4d57600080fd5b50508035926020909101359150565b6020808252601390820152722737ba1030903b30b634b21039b2b73232b91760691b604082015260600190565b600060208284031215610a9b57600080fd5b5051919050565b600060208284031215610ab457600080fd5b81518015158114610a3357600080fdfea26469706673582212204075e35c27813271a37c46b8d0eef935cd24eca0adb85cf1ad9c7188b843361364736f6c634300080c0033",
  "deployedSourceMap": "617:4784:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2479:465;;;;;;:::i;:::-;;:::i;:::-;;2040:164;;;;;;:::i;:::-;;:::i;3733:263::-;;;;;;:::i;:::-;;:::i;1148:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1148:40:1;;;;;;;-1:-1:-1;;;1148:40:1;;;;;;;;;;-1:-1:-1;;;;;570:15:2;;;552:34;;622:15;;;;617:2;602:18;;595:43;681:14;674:22;654:18;;;647:50;502:2;487:18;1148:40:1;;;;;;;3207:262;;;;;;:::i;:::-;;:::i;4443:956::-;;;;;;:::i;:::-;;:::i;2479:465::-;1517:10;1509:56;;;;-1:-1:-1;;;1509:56:1;;;;;;;:::i;:::-;;;;;;;;;2574:10:::1;2605:1;2565:20:::0;;;::::1;::::0;;;;;;:28:::1;;::::0;-1:-1:-1;;;;;2565:28:1::1;:42:::0;2557:89:::1;;;::::0;-1:-1:-1;;;2557:89:1;;1511:2:2;2557:89:1::1;::::0;::::1;1493:21:2::0;1550:2;1530:18;;;1523:30;1589:34;1569:18;;;1562:62;-1:-1:-1;;;1640:18:2;;;1633:32;1682:19;;2557:89:1::1;1309:398:2::0;2557:89:1::1;-1:-1:-1::0;;;;;2664:22:1;::::1;2656:59;;;::::0;-1:-1:-1;;;2656:59:1;;1914:2:2;2656:59:1::1;::::0;::::1;1896:21:2::0;1953:2;1933:18;;;1926:30;1992:26;1972:18;;;1965:54;2036:18;;2656:59:1::1;1712:348:2::0;2656:59:1::1;2733:10;-1:-1:-1::0;;;;;2733:22:1;::::1;;;2725:66;;;::::0;-1:-1:-1;;;2725:66:1;;2267:2:2;2725:66:1::1;::::0;::::1;2249:21:2::0;2306:2;2286:18;;;2279:30;2345:33;2325:18;;;2318:61;2396:18;;2725:66:1::1;2065:355:2::0;2725:66:1::1;-1:-1:-1::0;;;;;2809:18:1;;::::1;2852:1;2809:18:::0;;;::::1;::::0;;;;;;:24;::::1;2801:78;;;::::0;-1:-1:-1;;;2801:78:1;;2627:2:2;2801:78:1::1;::::0;::::1;2609:21:2::0;2666:2;2646:18;;;2639:30;-1:-1:-1;;;2685:18:2;;;2678:49;2744:18;;2801:78:1::1;2425:343:2::0;2801:78:1::1;2907:10;2898:8;:20:::0;;;::::1;::::0;;;;;;:28:::1;;:39:::0;;-1:-1:-1;;;;;;2898:39:1::1;-1:-1:-1::0;;;;;2898:39:1;;;::::1;::::0;;;::::1;::::0;;2479:465::o;2040:164::-;1517:10;1509:56;;;;-1:-1:-1;;;1509:56:1;;;;;;;:::i;:::-;2109:16:::1;2128:21;2142:6;2128:13;:21::i;:::-;2168:10;2159:8;:20:::0;;;::::1;::::0;;;;;;:38;;-1:-1:-1;;;;;;2159:38:1::1;-1:-1:-1::0;;;;;2159:38:1;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;2040:164:1:o;3733:263::-;1517:10;1509:56;;;;-1:-1:-1;;;1509:56:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3814:22:1;::::1;3806:53;;;::::0;-1:-1:-1;;;3806:53:1;;2975:2:2;3806:53:1::1;::::0;::::1;2957:21:2::0;3014:2;2994:18;;;2987:30;-1:-1:-1;;;3033:18:2;;;3026:48;3091:18;;3806:53:1::1;2773:342:2::0;3806:53:1::1;-1:-1:-1::0;;;;;3877:18:1;;::::1;:8;:18:::0;;;::::1;::::0;;;;;;:26:::1;;::::0;::::1;3907:10;3877:40;3869:75;;;::::0;-1:-1:-1;;;3869:75:1;;3322:2:2;3869:75:1::1;::::0;::::1;3304:21:2::0;3361:2;3341:18;;;3334:30;-1:-1:-1;;;3380:18:2;;;3373:52;3442:18;;3869:75:1::1;3120:346:2::0;3869:75:1::1;-1:-1:-1::0;;;;;3955:18:1::1;3984:5;3955:18:::0;;;::::1;::::0;;;;;;:26:::1;;:34:::0;;-1:-1:-1;;;;3955:34:1::1;::::0;;3733:263::o;3207:262::-;1517:10;1509:56;;;;-1:-1:-1;;;1509:56:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;3288:22:1;::::1;3280:53;;;::::0;-1:-1:-1;;;3280:53:1;;2975:2:2;3280:53:1::1;::::0;::::1;2957:21:2::0;3014:2;2994:18;;;2987:30;-1:-1:-1;;;3033:18:2;;;3026:48;3091:18;;3280:53:1::1;2773:342:2::0;3280:53:1::1;-1:-1:-1::0;;;;;3351:18:1;;::::1;:8;:18:::0;;;::::1;::::0;;;;;;:26:::1;;::::0;::::1;3381:10;3351:40;3343:75;;;::::0;-1:-1:-1;;;3343:75:1;;3322:2:2;3343:75:1::1;::::0;::::1;3304:21:2::0;3361:2;3341:18;;;3334:30;-1:-1:-1;;;3380:18:2;;;3373:52;3442:18;;3343:75:1::1;3120:346:2::0;3343:75:1::1;-1:-1:-1::0;;;;;3429:18:1::1;:8;:18:::0;;;::::1;::::0;;;;;;3458:4:::1;3429:26;:33:::0;;-1:-1:-1;;;;3429:33:1::1;-1:-1:-1::0;;;3429:33:1::1;::::0;;3207:262::o;4443:956::-;1517:10;1509:56;;;;-1:-1:-1;;;1509:56:1;;;;;;;:::i;:::-;4545:10:::1;4576:1;4536:20:::0;;;::::1;::::0;;;;;;:28:::1;;::::0;-1:-1:-1;;;;;4536:28:1::1;4528:89;;;::::0;-1:-1:-1;;;4528:89:1;;3673:2:2;4528:89:1::1;::::0;::::1;3655:21:2::0;3712:2;3692:18;;;3685:30;3751:34;3731:18;;;3724:62;-1:-1:-1;;;3802:18:2;;;3795:32;3844:19;;4528:89:1::1;3471:398:2::0;4528:89:1::1;4644:10;4635:8;:20:::0;;;::::1;::::0;;;;;;:28:::1;;::::0;-1:-1:-1;;;4635:28:1;::::1;;;4627:64;;;::::0;-1:-1:-1;;;4627:64:1;;4076:2:2;4627:64:1::1;::::0;::::1;4058:21:2::0;4115:2;4095:18;;;4088:30;4154:25;4134:18;;;4127:53;4197:18;;4627:64:1::1;3874:347:2::0;4627:64:1::1;4731:10;4703:16;4722:20:::0;;;::::1;::::0;;;;;;;:28:::1;;::::0;-1:-1:-1;;;;;4722:28:1;;::::1;4768:18:::0;;;;;;;:24;4722:28;;4768:24:::1;4760:86;;;::::0;-1:-1:-1;;;4760:86:1;;4428:2:2;4760:86:1::1;::::0;::::1;4410:21:2::0;4467:2;4447:18;;;4440:30;4506:29;4486:18;;;4479:57;4553:18;;4760:86:1::1;4226:351:2::0;4760:86:1::1;4873:10;4857:13;4910:15:::0;;;::::1;::::0;;;;;;;:21;-1:-1:-1;;;;;4957:18:1;;::::1;::::0;;;;;;:24;5000:38;;-1:-1:-1;;;5000:38:1;;::::1;::::0;::::1;4794:34:2::0;;;5032:4:1::1;4844:18:2::0;;;4837:43;4910:21:1;;::::1;::::0;4957:24;;;::::1;::::0;5042:8;;4910:21;;5000:16:::1;::::0;4729:18:2;;5000:38:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;4992:90;;;::::0;-1:-1:-1;;;4992:90:1;;5282:2:2;4992:90:1::1;::::0;::::1;5264:21:2::0;5321:2;5301:18;;;5294:30;5360:29;5340:18;;;5333:57;5407:18;;4992:90:1::1;5080:351:2::0;4992:90:1::1;5100:41;::::0;-1:-1:-1;;;5100:41:1;;-1:-1:-1;;;;;4812:15:2;;;5100:41:1::1;::::0;::::1;4794:34:2::0;5135:4:1::1;4844:18:2::0;;;4837:43;5145:8:1;;5100:16;;::::1;::::0;::::1;::::0;4729:18:2;;5100:41:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;5092:93;;;::::0;-1:-1:-1;;;5092:93:1;;5638:2:2;5092:93:1::1;::::0;::::1;5620:21:2::0;5677:2;5657:18;;;5650:30;5716:29;5696:18;;;5689:57;5763:18;;5092:93:1::1;5436:351:2::0;5092:93:1::1;5206:46;::::0;-1:-1:-1;;;5206:46:1;;-1:-1:-1;;;;;6050:15:2;;;5206:46:1::1;::::0;::::1;6032:34:2::0;6102:15;;;6082:18;;;6075:43;6134:18;;;6127:34;;;5196:7:1::1;::::0;5206:19;;::::1;::::0;::::1;::::0;5967:18:2;;5206:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5272;::::0;-1:-1:-1;;;5272:46:1;;-1:-1:-1;;;;;6050:15:2;;;5272:46:1::1;::::0;::::1;6032:34:2::0;6102:15;;;6082:18;;;6075:43;6134:18;;;6127:34;;;5196:56:1;;-1:-1:-1;5262:7:1::1;::::0;5272:19;::::1;::::0;::::1;::::0;5967:18:2;;5272:46:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5262:56;;5329:9;5341:2;:8;;;;;5347:2;5341:8;5329:20;;5368:4;5360:32;;;::::0;-1:-1:-1;;;5360:32:1;;6656:2:2;5360:32:1::1;::::0;::::1;6638:21:2::0;6695:2;6675:18;;;6668:30;-1:-1:-1;;;6714:18:2;;;6707:45;6769:18;;5360:32:1::1;6454:339:2::0;5360:32:1::1;4518:881;;;;;;;4443:956:::0;;:::o;1736:198::-;1797:23;-1:-1:-1;;;;;1844:21:1;;1836:47;;;;-1:-1:-1;;;1836:47:1;;7000:2:2;1836:47:1;;;6982:21:2;7039:2;7019:18;;;7012:30;-1:-1:-1;;;7058:18:2;;;7051:43;7111:18;;1836:47:1;6798:337:2;1836:47:1;-1:-1:-1;1919:7:1;1736:198::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;708:248::-;776:6;784;837:2;825:9;816:7;812:23;808:32;805:52;;;853:1;850;843:12;805:52;-1:-1:-1;;876:23:2;;;946:2;931:18;;;918:32;;-1:-1:-1;708:248:2:o;961:343::-;1163:2;1145:21;;;1202:2;1182:18;;;1175:30;-1:-1:-1;;;1236:2:2;1221:18;;1214:49;1295:2;1280:18;;961:343::o;4891:184::-;4961:6;5014:2;5002:9;4993:7;4989:23;4985:32;4982:52;;;5030:1;5027;5020:12;4982:52;-1:-1:-1;5053:16:2;;4891:184;-1:-1:-1;4891:184:2:o;6172:277::-;6239:6;6292:2;6280:9;6271:7;6267:23;6263:32;6260:52;;;6308:1;6305;6298:12;6260:52;6340:9;6334:16;6393:5;6386:13;6379:21;6372:5;6369:32;6359:60;;6415:1;6412;6405:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    617,
    5401
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F7FBBE EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x63A53F3E EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x95C33652 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC32C402E EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xD96073CF EQ PUSH2 0x121 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH2 0x7A PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST PUSH2 0x7A PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST CALLER PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176652061207061697220616C72656164792C20636C6F73652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3A17 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x224 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420706172746E65727320616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420626520796F7572206F776E20706172746E65727300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x2DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2830B93A3732B91034B732BC34B9BA32B73A17 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 DUP3 PUSH2 0x9BE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1059191C995CDCC81A5CC81A5B9D985B1A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND CALLER EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103830B93A3732B939B997 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1059191C995CDCC81A5CC81A5B9D985B1A59 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND CALLER EQ PUSH2 0x526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103830B93A3732B939B997 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0xA5C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20706172746E657220666F72207468697320737761 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3817 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x151 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420616C6C6F77656420746F2E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F757220706172746E657220686173206E6F20746F6B656E732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP4 AND SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 DUP4 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x731 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x755 SWAP2 SWAP1 PUSH2 0xA89 JUMP JUMPDEST LT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E203120416C6C6F77616E6365203E20616D6F756E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP7 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x816 SWAP2 SWAP1 PUSH2 0xA89 JUMP JUMPDEST LT ISZERO PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E203220416C6C6F77616E6365203E20616D6F756E742E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP11 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x964 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0x972 JUMPI POP DUP2 JUMPDEST SWAP1 POP DUP1 PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2A37B5B2B7103737BA1039B2B73A17 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B2103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x2737BA1030903B30B634B21039B2B73232B917 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA33 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH22 0xE35C27813271A37C46B8D0EEF935CD24ECA0ADB85CF1 0xAD SWAP13 PUSH18 0x88B843361364736F6C634300080C00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8F7FBBE"
    },
    "38": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4420E486"
    },
    "49": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x63A53F3E"
    },
    "60": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F"
    },
    "64": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95C33652"
    },
    "71": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "75": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC32C402E"
    },
    "82": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10E"
    },
    "86": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD96073CF"
    },
    "93": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121"
    },
    "97": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        617,
        5401
      ],
      "op": "REVERT",
      "path": "1"
    },
    "103": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "104": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "107": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x75"
    },
    "110": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "111": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "113": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0A"
    },
    "116": {
      "fn": "TokenSwap.registerPartner",
      "jump": "i",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMP",
      "path": "1"
    },
    "117": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "118": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134"
    },
    "121": {
      "fn": "TokenSwap.registerPartner",
      "jump": "i",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMP",
      "path": "1"
    },
    "122": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "123": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "STOP",
      "path": "1"
    },
    "124": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "125": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "128": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A"
    },
    "131": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "132": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "134": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0A"
    },
    "137": {
      "fn": "TokenSwap.register",
      "jump": "i",
      "offset": [
        2040,
        2204
      ],
      "op": "JUMP",
      "path": "1"
    },
    "138": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "139": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "142": {
      "fn": "TokenSwap.register",
      "jump": "i",
      "offset": [
        2040,
        2204
      ],
      "op": "JUMP",
      "path": "1"
    },
    "143": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "144": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "147": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D"
    },
    "150": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "151": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "153": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0A"
    },
    "156": {
      "fn": "TokenSwap.rejectPair",
      "jump": "i",
      "offset": [
        3733,
        3996
      ],
      "op": "JUMP",
      "path": "1"
    },
    "157": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "158": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x365"
    },
    "161": {
      "fn": "TokenSwap.rejectPair",
      "jump": "i",
      "offset": [
        3733,
        3996
      ],
      "op": "JUMP",
      "path": "1"
    },
    "162": {
      "offset": [
        1148,
        1188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "166": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0"
    },
    "169": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "170": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "172": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0A"
    },
    "175": {
      "fn": "TokenSwap.rejectPair",
      "jump": "i",
      "offset": [
        1148,
        1188
      ],
      "op": "JUMP",
      "path": "1"
    },
    "176": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "177": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "179": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "181": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "182": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "183": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "184": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "185": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "186": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "187": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "189": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "190": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "191": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "192": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "193": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "195": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "196": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "197": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "ADD",
      "path": "1"
    },
    "198": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHL"
    },
    "206": {
      "op": "SUB"
    },
    "207": {
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "208": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP3",
      "path": "1"
    },
    "209": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "AND",
      "path": "1"
    },
    "210": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "211": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "212": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "AND",
      "path": "1"
    },
    "213": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "220": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DIV",
      "path": "1"
    },
    "221": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "223": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "AND",
      "path": "1"
    },
    "224": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP4",
      "path": "1"
    },
    "225": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "229": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "230": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "op": "SWAP5"
    },
    "240": {
      "op": "DUP6"
    },
    "241": {
      "op": "AND"
    },
    "242": {
      "op": "DUP2"
    },
    "243": {
      "op": "MSTORE"
    },
    "244": {
      "op": "SWAP4"
    },
    "245": {
      "op": "SWAP1"
    },
    "246": {
      "op": "SWAP3"
    },
    "247": {
      "op": "AND"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "DUP5"
    },
    "251": {
      "op": "ADD"
    },
    "252": {
      "op": "MSTORE"
    },
    "253": {
      "op": "ISZERO"
    },
    "254": {
      "op": "ISZERO"
    },
    "255": {
      "op": "SWAP1"
    },
    "256": {
      "op": "DUP3"
    },
    "257": {
      "op": "ADD"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "261": {
      "op": "ADD"
    },
    "262": {
      "offset": [
        1148,
        1188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "264": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "265": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "266": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "267": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SUB",
      "path": "1"
    },
    "268": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1148,
        1188
      ],
      "op": "RETURN",
      "path": "1"
    },
    "270": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "271": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "274": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11C"
    },
    "277": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "278": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "280": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0A"
    },
    "283": {
      "fn": "TokenSwap.acceptPair",
      "jump": "i",
      "offset": [
        3207,
        3469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "284": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "285": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x459"
    },
    "288": {
      "fn": "TokenSwap.acceptPair",
      "jump": "i",
      "offset": [
        3207,
        3469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "289": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "290": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "293": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F"
    },
    "296": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "297": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "299": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3A"
    },
    "302": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        4443,
        5399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "303": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "304": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x553"
    },
    "307": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        4443,
        5399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "308": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "309": {
      "offset": [
        1517,
        1527
      ],
      "op": "CALLER",
      "path": "1"
    },
    "310": {
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "313": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "314": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "316": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "325": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "326": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "328": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "ADD",
      "path": "1"
    },
    "329": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "332": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "333": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5C"
    },
    "336": {
      "fn": "TokenSwap.registerPartner",
      "jump": "i",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "337": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "340": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "341": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP1",
      "path": "1"
    },
    "342": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "343": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "SUB",
      "path": "1"
    },
    "344": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "345": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "346": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "347": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2574,
        2584
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 0
    },
    "348": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2605,
        2606
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "350": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "351": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "DUP2",
      "path": "1"
    },
    "352": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "353": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "355": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "DUP2",
      "path": "1"
    },
    "356": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "357": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "358": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "360": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "361": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2585
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "362": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "364": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2593
      ],
      "op": "ADD",
      "path": "1"
    },
    "365": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2593
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2593
      ],
      "op": "AND",
      "path": "1"
    },
    "375": {
      "branch": 20,
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2565,
        2607
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "376": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CE"
    },
    "379": {
      "branch": 20,
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "380": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "382": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "DUP2",
      "path": "1"
    },
    "391": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "394": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "396": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "DUP3",
      "path": "1"
    },
    "397": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "ADD",
      "path": "1"
    },
    "398": {
      "op": "MSTORE"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "403": {
      "op": "DUP3"
    },
    "404": {
      "op": "ADD"
    },
    "405": {
      "op": "MSTORE"
    },
    "406": {
      "op": "PUSH32",
      "value": "0x596F7520686176652061207061697220616C72656164792C20636C6F73652069"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "441": {
      "op": "DUP3"
    },
    "442": {
      "op": "ADD"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "PUSH2",
      "value": "0x3A17"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "452": {
      "op": "DUP3"
    },
    "453": {
      "op": "ADD"
    },
    "454": {
      "op": "MSTORE"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "461": {
      "op": "JUMP"
    },
    "462": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2557,
        2646
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2664,
        2686
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 1
    },
    "472": {
      "branch": 21,
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2664,
        2686
      ],
      "op": "AND",
      "path": "1"
    },
    "473": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224"
    },
    "476": {
      "branch": 21,
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "477": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "479": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "486": {
      "op": "SHL"
    },
    "487": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "DUP2",
      "path": "1"
    },
    "488": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "491": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "493": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "DUP3",
      "path": "1"
    },
    "494": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "ADD",
      "path": "1"
    },
    "495": {
      "op": "MSTORE"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "500": {
      "op": "DUP3"
    },
    "501": {
      "op": "ADD"
    },
    "502": {
      "op": "MSTORE"
    },
    "503": {
      "op": "PUSH32",
      "value": "0x496E76616C696420706172746E65727320616464726573730000000000000000"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "538": {
      "op": "DUP3"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "op": "MSTORE"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "543": {
      "op": "ADD"
    },
    "544": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "547": {
      "op": "JUMP"
    },
    "548": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2656,
        2715
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "549": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2733,
        2743
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2733,
        2755
      ],
      "op": "DUP3",
      "path": "1"
    },
    "559": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2733,
        2755
      ],
      "op": "AND",
      "path": "1"
    },
    "560": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2733,
        2755
      ],
      "op": "EQ",
      "path": "1"
    },
    "561": {
      "branch": 22,
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2733,
        2755
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "562": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D"
    },
    "565": {
      "branch": 22,
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "566": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "568": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "DUP2",
      "path": "1"
    },
    "577": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "580": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "582": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "DUP3",
      "path": "1"
    },
    "583": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "ADD",
      "path": "1"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "589": {
      "op": "DUP3"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F7420626520796F7572206F776E20706172746E65727300"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "627": {
      "op": "DUP3"
    },
    "628": {
      "op": "ADD"
    },
    "629": {
      "op": "MSTORE"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "632": {
      "op": "ADD"
    },
    "633": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "636": {
      "op": "JUMP"
    },
    "637": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2725,
        2791
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "op": "SUB"
    },
    "646": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 3
    },
    "647": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "648": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "AND",
      "path": "1"
    },
    "649": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2852,
        2853
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "651": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "652": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "653": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "654": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "657": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "658": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "659": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "661": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "662": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2827
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "663": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2833
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "664": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2809,
        2833
      ],
      "op": "AND",
      "path": "1"
    },
    "665": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DA"
    },
    "668": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "669": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "671": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "DUP2",
      "path": "1"
    },
    "680": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "683": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "685": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "DUP3",
      "path": "1"
    },
    "686": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "ADD",
      "path": "1"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "692": {
      "op": "DUP3"
    },
    "693": {
      "op": "ADD"
    },
    "694": {
      "op": "MSTORE"
    },
    "695": {
      "op": "PUSH19",
      "value": "0x2830B93A3732B91034B732BC34B9BA32B73A17"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "720": {
      "op": "DUP3"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "729": {
      "op": "JUMP"
    },
    "730": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2801,
        2879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "731": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2907,
        2917
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 4
    },
    "732": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2906
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "735": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "DUP2",
      "path": "1"
    },
    "736": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "737": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "739": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "DUP2",
      "path": "1"
    },
    "740": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "741": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "742": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "744": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "745": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2918
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "746": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "748": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2926
      ],
      "op": "ADD",
      "path": "1"
    },
    "749": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "750": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "757": {
      "op": "SHL"
    },
    "758": {
      "op": "SUB"
    },
    "759": {
      "op": "NOT"
    },
    "760": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "AND",
      "path": "1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "SUB"
    },
    "769": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "770": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "771": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "772": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "AND",
      "path": "1"
    },
    "773": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "774": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "775": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "776": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "OR",
      "path": "1"
    },
    "777": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "778": {
      "fn": "TokenSwap.registerPartner",
      "offset": [
        2898,
        2937
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "779": {
      "fn": "TokenSwap.registerPartner",
      "jump": "o",
      "offset": [
        2479,
        2944
      ],
      "op": "JUMP",
      "path": "1"
    },
    "780": {
      "fn": "TokenSwap.register",
      "offset": [
        2040,
        2204
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "781": {
      "offset": [
        1517,
        1527
      ],
      "op": "CALLER",
      "path": "1"
    },
    "782": {
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x329"
    },
    "785": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "786": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "788": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "797": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "798": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "800": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "ADD",
      "path": "1"
    },
    "801": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "804": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "805": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5C"
    },
    "808": {
      "fn": "TokenSwap.register",
      "jump": "i",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "809": {
      "fn": "TokenSwap.register",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "810": {
      "fn": "TokenSwap.register",
      "offset": [
        2109,
        2125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "812": {
      "fn": "TokenSwap.register",
      "offset": [
        2128,
        2149
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x334"
    },
    "815": {
      "fn": "TokenSwap.register",
      "offset": [
        2142,
        2148
      ],
      "op": "DUP3",
      "path": "1"
    },
    "816": {
      "fn": "TokenSwap.register",
      "offset": [
        2128,
        2141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9BE"
    },
    "819": {
      "fn": "TokenSwap.register",
      "jump": "i",
      "offset": [
        2128,
        2149
      ],
      "op": "JUMP",
      "path": "1"
    },
    "820": {
      "fn": "TokenSwap.register",
      "offset": [
        2128,
        2149
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "821": {
      "fn": "TokenSwap.register",
      "offset": [
        2168,
        2178
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 5
    },
    "822": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "824": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "825": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "826": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "827": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "829": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "830": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "831": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "832": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "834": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "835": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2179
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "836": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "837": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "op": "NOT"
    },
    "847": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "AND",
      "path": "1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "SHL"
    },
    "855": {
      "op": "SUB"
    },
    "856": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "857": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "858": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "859": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "AND",
      "path": "1"
    },
    "860": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "861": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "862": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "863": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "OR",
      "path": "1"
    },
    "864": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "865": {
      "fn": "TokenSwap.register",
      "offset": [
        2159,
        2197
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "866": {
      "op": "POP"
    },
    "867": {
      "op": "POP"
    },
    "868": {
      "fn": "TokenSwap.register",
      "jump": "o",
      "offset": [
        2040,
        2204
      ],
      "op": "JUMP",
      "path": "1"
    },
    "869": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3733,
        3996
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "870": {
      "offset": [
        1517,
        1527
      ],
      "op": "CALLER",
      "path": "1"
    },
    "871": {
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x382"
    },
    "874": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "875": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "877": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "886": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "887": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "889": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "ADD",
      "path": "1"
    },
    "890": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "893": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "894": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5C"
    },
    "897": {
      "fn": "TokenSwap.rejectPair",
      "jump": "i",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "898": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3814,
        3836
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 6
    },
    "908": {
      "branch": 23,
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3814,
        3836
      ],
      "op": "AND",
      "path": "1"
    },
    "909": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CD"
    },
    "912": {
      "branch": 23,
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "913": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "915": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "922": {
      "op": "SHL"
    },
    "923": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "924": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "927": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "929": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "DUP3",
      "path": "1"
    },
    "930": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "ADD",
      "path": "1"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "936": {
      "op": "DUP3"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH18",
      "value": "0x1059191C995CDCC81A5CC81A5B9D985B1A59"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "960": {
      "op": "SHL"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "968": {
      "op": "ADD"
    },
    "969": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "972": {
      "op": "JUMP"
    },
    "973": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3806,
        3859
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "op": "SUB"
    },
    "982": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 7
    },
    "983": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "984": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "AND",
      "path": "1"
    },
    "985": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3885
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "987": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "988": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "989": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "990": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "992": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "993": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "994": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "995": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "997": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "998": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3895
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "999": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1001": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3903
      ],
      "op": "ADD",
      "path": "1"
    },
    "1002": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3903
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1003": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3903
      ],
      "op": "AND",
      "path": "1"
    },
    "1004": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3907,
        3917
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1005": {
      "branch": 24,
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3877,
        3917
      ],
      "op": "EQ",
      "path": "1"
    },
    "1006": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x432"
    },
    "1009": {
      "branch": 24,
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1010": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1012": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1021": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1024": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1026": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1027": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "ADD",
      "path": "1"
    },
    "1028": {
      "op": "MSTORE"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1033": {
      "op": "DUP3"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "MSTORE"
    },
    "1036": {
      "op": "PUSH22",
      "value": "0x2CB7BA9030B932903737BA103830B93A3732B939B997"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1073": {
      "op": "JUMP"
    },
    "1074": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3869,
        3944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "AND",
      "path": "1",
      "statement": 8
    },
    "1084": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3984,
        3989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1086": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1087": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1088": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1089": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1091": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1092": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1093": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1094": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1096": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1097": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3973
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1098": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1100": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3981
      ],
      "op": "ADD",
      "path": "1"
    },
    "1101": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3989
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1102": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3989
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "NOT"
    },
    "1109": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3989
      ],
      "op": "AND",
      "path": "1"
    },
    "1110": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1111": {
      "fn": "TokenSwap.rejectPair",
      "offset": [
        3955,
        3989
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1112": {
      "fn": "TokenSwap.rejectPair",
      "jump": "o",
      "offset": [
        3733,
        3996
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1113": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3207,
        3469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1114": {
      "offset": [
        1517,
        1527
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1115": {
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x476"
    },
    "1118": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1119": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1121": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1130": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1131": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1133": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "ADD",
      "path": "1"
    },
    "1134": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1137": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1138": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5C"
    },
    "1141": {
      "fn": "TokenSwap.acceptPair",
      "jump": "i",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1142": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3288,
        3310
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 9
    },
    "1152": {
      "branch": 25,
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3288,
        3310
      ],
      "op": "AND",
      "path": "1"
    },
    "1153": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C1"
    },
    "1156": {
      "branch": 25,
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1157": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1159": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1168": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1171": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1173": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1174": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "ADD",
      "path": "1"
    },
    "1175": {
      "op": "MSTORE"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1180": {
      "op": "DUP3"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH18",
      "value": "0x1059191C995CDCC81A5CC81A5B9D985B1A59"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1207": {
      "op": "DUP3"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1212": {
      "op": "ADD"
    },
    "1213": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1216": {
      "op": "JUMP"
    },
    "1217": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3280,
        3333
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 10
    },
    "1227": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1228": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "AND",
      "path": "1"
    },
    "1229": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1231": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1232": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1233": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1234": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1236": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1237": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1238": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1239": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1241": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1242": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3369
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1243": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1245": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3377
      ],
      "op": "ADD",
      "path": "1"
    },
    "1246": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3377
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1247": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3377
      ],
      "op": "AND",
      "path": "1"
    },
    "1248": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3381,
        3391
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1249": {
      "branch": 26,
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3351,
        3391
      ],
      "op": "EQ",
      "path": "1"
    },
    "1250": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x526"
    },
    "1253": {
      "branch": 26,
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1254": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1256": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1265": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1268": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1270": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1271": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "ADD",
      "path": "1"
    },
    "1272": {
      "op": "MSTORE"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1277": {
      "op": "DUP3"
    },
    "1278": {
      "op": "ADD"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "op": "PUSH22",
      "value": "0x2CB7BA9030B932903737BA103830B93A3732B939B997"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1317": {
      "op": "JUMP"
    },
    "1318": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3343,
        3418
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "SUB"
    },
    "1327": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "AND",
      "path": "1",
      "statement": 11
    },
    "1328": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1330": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1331": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1332": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1333": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1335": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1336": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1337": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1338": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1340": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1341": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3447
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1342": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3458,
        3462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1344": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3455
      ],
      "op": "ADD",
      "path": "1"
    },
    "1345": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3462
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1346": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3462
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "NOT"
    },
    "1353": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3462
      ],
      "op": "AND",
      "path": "1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3462
      ],
      "op": "OR",
      "path": "1"
    },
    "1360": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3462
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1361": {
      "fn": "TokenSwap.acceptPair",
      "offset": [
        3429,
        3462
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1362": {
      "fn": "TokenSwap.acceptPair",
      "jump": "o",
      "offset": [
        3207,
        3469
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1363": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1364": {
      "offset": [
        1517,
        1527
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1365": {
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x570"
    },
    "1368": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1369": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1371": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1380": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1381": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1383": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "ADD",
      "path": "1"
    },
    "1384": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1387": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1388": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5C"
    },
    "1391": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1392": {
      "fn": "TokenSwap.swap",
      "offset": [
        1509,
        1565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1393": {
      "fn": "TokenSwap.swap",
      "offset": [
        4545,
        4555
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 12
    },
    "1394": {
      "fn": "TokenSwap.swap",
      "offset": [
        4576,
        4577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1396": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1397": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1398": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1399": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1401": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1402": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1403": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1404": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1406": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1407": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4556
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1408": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4564
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1410": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4564
      ],
      "op": "ADD",
      "path": "1"
    },
    "1411": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4564
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "fn": "TokenSwap.swap",
      "offset": [
        4536,
        4564
      ],
      "op": "AND",
      "path": "1"
    },
    "1421": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E3"
    },
    "1424": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1425": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1427": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1436": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1439": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1441": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1442": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "ADD",
      "path": "1"
    },
    "1443": {
      "op": "MSTORE"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH32",
      "value": "0x596F752068617665206E6F20706172746E657220666F72207468697320737761"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1486": {
      "op": "DUP3"
    },
    "1487": {
      "op": "ADD"
    },
    "1488": {
      "op": "MSTORE"
    },
    "1489": {
      "op": "PUSH2",
      "value": "0x3817"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "1494": {
      "op": "SHL"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1497": {
      "op": "DUP3"
    },
    "1498": {
      "op": "ADD"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1502": {
      "op": "ADD"
    },
    "1503": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1506": {
      "op": "JUMP"
    },
    "1507": {
      "fn": "TokenSwap.swap",
      "offset": [
        4528,
        4617
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1508": {
      "fn": "TokenSwap.swap",
      "offset": [
        4644,
        4654
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 13
    },
    "1509": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4643
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1511": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1512": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1513": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1514": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1516": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1517": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1518": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1519": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1521": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1522": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4655
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1523": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1525": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "ADD",
      "path": "1"
    },
    "1526": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1533": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "DIV",
      "path": "1"
    },
    "1534": {
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1536": {
      "branch": 27,
      "fn": "TokenSwap.swap",
      "offset": [
        4635,
        4663
      ],
      "op": "AND",
      "path": "1"
    },
    "1537": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64C"
    },
    "1540": {
      "branch": 27,
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1541": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1543": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1552": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1555": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1557": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1558": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "ADD",
      "path": "1"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1564": {
      "op": "DUP3"
    },
    "1565": {
      "op": "ADD"
    },
    "1566": {
      "op": "MSTORE"
    },
    "1567": {
      "op": "PUSH32",
      "value": "0x596F7520617265206E6F7420616C6C6F77656420746F2E000000000000000000"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1602": {
      "op": "DUP3"
    },
    "1603": {
      "op": "ADD"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1611": {
      "op": "JUMP"
    },
    "1612": {
      "fn": "TokenSwap.swap",
      "offset": [
        4627,
        4691
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1613": {
      "fn": "TokenSwap.swap",
      "offset": [
        4731,
        4741
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1614": {
      "fn": "TokenSwap.swap",
      "offset": [
        4703,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1616": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1617": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1618": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1619": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1621": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1622": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1623": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1624": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1626": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1627": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1628": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4742
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1629": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1631": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "ADD",
      "path": "1"
    },
    "1632": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1642": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1643": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "AND",
      "path": "1"
    },
    "1644": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "1645": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1646": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1647": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1648": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1649": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1650": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4786
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1651": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4792
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1652": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1653": {
      "fn": "TokenSwap.swap",
      "offset": [
        4722,
        4750
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1654": {
      "fn": "TokenSwap.swap",
      "offset": [
        4768,
        4792
      ],
      "op": "AND",
      "path": "1"
    },
    "1655": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C2"
    },
    "1658": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1659": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1661": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1670": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1675": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1676": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "ADD",
      "path": "1"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH32",
      "value": "0x596F757220706172746E657220686173206E6F20746F6B656E732E0000000000"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1729": {
      "op": "JUMP"
    },
    "1730": {
      "fn": "TokenSwap.swap",
      "offset": [
        4760,
        4846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1731": {
      "fn": "TokenSwap.swap",
      "offset": [
        4873,
        4883
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1732": {
      "fn": "TokenSwap.swap",
      "offset": [
        4857,
        4870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1734": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1735": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1736": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1737": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1739": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1740": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1741": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1742": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1744": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1745": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1746": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4925
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1747": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "op": "SUB"
    },
    "1756": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1757": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1758": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "AND",
      "path": "1"
    },
    "1759": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1760": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1761": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1762": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1763": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1764": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4975
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1765": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4981
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1766": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 15
    },
    "1767": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1768": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1775": {
      "op": "SHL"
    },
    "1776": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1777": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1778": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1780": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1781": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "ADD",
      "path": "1"
    },
    "1782": {
      "op": "DUP6"
    },
    "1783": {
      "op": "SWAP1"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "fn": "TokenSwap.swap",
      "offset": [
        5032,
        5036
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1788": {
      "op": "DUP3"
    },
    "1789": {
      "op": "ADD"
    },
    "1790": {
      "op": "MSTORE"
    },
    "1791": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1792": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1793": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "AND",
      "path": "1"
    },
    "1794": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1795": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4981
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1796": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4981
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1797": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4981
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1798": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4981
      ],
      "op": "AND",
      "path": "1"
    },
    "1799": {
      "fn": "TokenSwap.swap",
      "offset": [
        4957,
        4981
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1800": {
      "fn": "TokenSwap.swap",
      "offset": [
        5042,
        5050
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1801": {
      "fn": "TokenSwap.swap",
      "offset": [
        5042,
        5050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1802": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1803": {
      "fn": "TokenSwap.swap",
      "offset": [
        4910,
        4931
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1804": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5016
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "1809": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1812": {
      "op": "ADD"
    },
    "1813": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1815": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1817": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1818": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1819": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1820": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "SUB",
      "path": "1"
    },
    "1821": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1822": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1823": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "GAS",
      "path": "1"
    },
    "1824": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1825": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1826": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1827": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1828": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x731"
    },
    "1831": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1832": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1833": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1835": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1836": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1837": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1838": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1840": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1841": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1842": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "POP",
      "path": "1"
    },
    "1843": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "POP",
      "path": "1"
    },
    "1844": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "POP",
      "path": "1"
    },
    "1845": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "POP",
      "path": "1"
    },
    "1846": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1848": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1849": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1850": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1852": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "NOT",
      "path": "1"
    },
    "1853": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1855": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1856": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "ADD",
      "path": "1"
    },
    "1857": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "AND",
      "path": "1"
    },
    "1858": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1859": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "ADD",
      "path": "1"
    },
    "1860": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1861": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1863": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1864": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "POP",
      "path": "1"
    },
    "1865": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1866": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "ADD",
      "path": "1"
    },
    "1867": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1868": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x755"
    },
    "1871": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1872": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1873": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA89"
    },
    "1876": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        5000,
        5038
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1877": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1878": {
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5050
      ],
      "op": "LT",
      "path": "1"
    },
    "1879": {
      "branch": 28,
      "fn": "TokenSwap.swap",
      "offset": [
        5000,
        5050
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1880": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A3"
    },
    "1883": {
      "branch": 28,
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1884": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1886": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1895": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1898": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1900": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1901": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "ADD",
      "path": "1"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1907": {
      "op": "DUP3"
    },
    "1908": {
      "op": "ADD"
    },
    "1909": {
      "op": "MSTORE"
    },
    "1910": {
      "op": "PUSH32",
      "value": "0x546F6B656E203120416C6C6F77616E6365203E20616D6F756E742E0000000000"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1945": {
      "op": "DUP3"
    },
    "1946": {
      "op": "ADD"
    },
    "1947": {
      "op": "MSTORE"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1950": {
      "op": "ADD"
    },
    "1951": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "1954": {
      "op": "JUMP"
    },
    "1955": {
      "fn": "TokenSwap.swap",
      "offset": [
        4992,
        5082
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1956": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x40"
    },
    "1958": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1959": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1968": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "op": "SUB"
    },
    "1977": {
      "op": "DUP6"
    },
    "1978": {
      "op": "DUP2"
    },
    "1979": {
      "op": "AND"
    },
    "1980": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1982": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1983": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "ADD",
      "path": "1"
    },
    "1984": {
      "op": "MSTORE"
    },
    "1985": {
      "fn": "TokenSwap.swap",
      "offset": [
        5135,
        5139
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1988": {
      "op": "DUP4"
    },
    "1989": {
      "op": "ADD"
    },
    "1990": {
      "op": "MSTORE"
    },
    "1991": {
      "fn": "TokenSwap.swap",
      "offset": [
        5145,
        5153
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1992": {
      "fn": "TokenSwap.swap",
      "offset": [
        5145,
        5153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1993": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1994": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5116
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1995": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5116
      ],
      "op": "AND",
      "path": "1"
    },
    "1996": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1997": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5116
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "2002": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2008": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2010": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2011": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2012": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2013": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "SUB",
      "path": "1"
    },
    "2014": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2015": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2016": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "GAS",
      "path": "1"
    },
    "2017": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2018": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2019": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2020": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2021": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F2"
    },
    "2024": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2025": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2026": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2028": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2029": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2030": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2031": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2033": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2034": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2035": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "POP",
      "path": "1"
    },
    "2036": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "POP",
      "path": "1"
    },
    "2037": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "POP",
      "path": "1"
    },
    "2038": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "POP",
      "path": "1"
    },
    "2039": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2041": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2042": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2043": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2045": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "NOT",
      "path": "1"
    },
    "2046": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2048": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2049": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "ADD",
      "path": "1"
    },
    "2050": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "AND",
      "path": "1"
    },
    "2051": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2052": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "ADD",
      "path": "1"
    },
    "2053": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2054": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2056": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2057": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "POP",
      "path": "1"
    },
    "2058": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2059": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "ADD",
      "path": "1"
    },
    "2060": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2061": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x816"
    },
    "2064": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2065": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2066": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA89"
    },
    "2069": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        5100,
        5141
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2070": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2071": {
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5153
      ],
      "op": "LT",
      "path": "1"
    },
    "2072": {
      "branch": 29,
      "fn": "TokenSwap.swap",
      "offset": [
        5100,
        5153
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2073": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x864"
    },
    "2076": {
      "branch": 29,
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2077": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2079": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2088": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2091": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2093": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2094": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "ADD",
      "path": "1"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2100": {
      "op": "DUP3"
    },
    "2101": {
      "op": "ADD"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "op": "PUSH32",
      "value": "0x546F6B656E203220416C6C6F77616E6365203E20616D6F756E742E0000000000"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2138": {
      "op": "DUP3"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "2147": {
      "op": "JUMP"
    },
    "2148": {
      "fn": "TokenSwap.swap",
      "offset": [
        5092,
        5185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2149": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2151": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2152": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2161": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "op": "SUB"
    },
    "2170": {
      "op": "DUP5"
    },
    "2171": {
      "op": "DUP2"
    },
    "2172": {
      "op": "AND"
    },
    "2173": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2175": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2176": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "ADD",
      "path": "1"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "DUP6"
    },
    "2179": {
      "op": "DUP2"
    },
    "2180": {
      "op": "AND"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2183": {
      "op": "DUP4"
    },
    "2184": {
      "op": "ADD"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "DUP9"
    },
    "2191": {
      "op": "SWAP1"
    },
    "2192": {
      "op": "MSTORE"
    },
    "2193": {
      "fn": "TokenSwap.swap",
      "offset": [
        5196,
        5203
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2195": {
      "fn": "TokenSwap.swap",
      "offset": [
        5196,
        5203
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2196": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2197": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5225
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2198": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5225
      ],
      "op": "AND",
      "path": "1"
    },
    "2199": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2200": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5225
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "2205": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2211": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2213": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2214": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2215": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2216": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "SUB",
      "path": "1"
    },
    "2217": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2218": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2220": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2221": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "GAS",
      "path": "1"
    },
    "2222": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "CALL",
      "path": "1"
    },
    "2223": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2224": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2225": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2226": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8BF"
    },
    "2229": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2230": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2231": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2233": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2234": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2235": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2236": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2238": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2239": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2240": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "POP",
      "path": "1"
    },
    "2241": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "POP",
      "path": "1"
    },
    "2242": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "POP",
      "path": "1"
    },
    "2243": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "POP",
      "path": "1"
    },
    "2244": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2246": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2247": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2248": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2250": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "NOT",
      "path": "1"
    },
    "2251": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2253": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2254": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "ADD",
      "path": "1"
    },
    "2255": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "AND",
      "path": "1"
    },
    "2256": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2257": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "ADD",
      "path": "1"
    },
    "2258": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2259": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2261": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2262": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "POP",
      "path": "1"
    },
    "2263": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2264": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "ADD",
      "path": "1"
    },
    "2265": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2266": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8E3"
    },
    "2269": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2270": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2271": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA2"
    },
    "2274": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        5206,
        5252
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2275": {
      "fn": "TokenSwap.swap",
      "offset": [
        5206,
        5252
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2276": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2278": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2279": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2286": {
      "op": "SHL"
    },
    "2287": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2288": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "op": "DUP8"
    },
    "2298": {
      "op": "DUP2"
    },
    "2299": {
      "op": "AND"
    },
    "2300": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2302": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2303": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "ADD",
      "path": "1"
    },
    "2304": {
      "op": "MSTORE"
    },
    "2305": {
      "op": "DUP7"
    },
    "2306": {
      "op": "DUP2"
    },
    "2307": {
      "op": "AND"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2310": {
      "op": "DUP4"
    },
    "2311": {
      "op": "ADD"
    },
    "2312": {
      "op": "MSTORE"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "op": "DUP11"
    },
    "2318": {
      "op": "SWAP1"
    },
    "2319": {
      "op": "MSTORE"
    },
    "2320": {
      "fn": "TokenSwap.swap",
      "offset": [
        5196,
        5252
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2321": {
      "fn": "TokenSwap.swap",
      "offset": [
        5196,
        5252
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2322": {
      "op": "POP"
    },
    "2323": {
      "fn": "TokenSwap.swap",
      "offset": [
        5262,
        5269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2325": {
      "fn": "TokenSwap.swap",
      "offset": [
        5262,
        5269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2326": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5291
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2327": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5291
      ],
      "op": "AND",
      "path": "1"
    },
    "2328": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2329": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5291
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "2334": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2340": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2342": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2343": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2344": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2345": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "SUB",
      "path": "1"
    },
    "2346": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2347": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2349": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2350": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "GAS",
      "path": "1"
    },
    "2351": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "CALL",
      "path": "1"
    },
    "2352": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2353": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2354": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2355": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x940"
    },
    "2358": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2359": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2360": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2362": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2363": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2364": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2365": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2367": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2368": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2369": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "POP",
      "path": "1"
    },
    "2370": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "POP",
      "path": "1"
    },
    "2371": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "POP",
      "path": "1"
    },
    "2372": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "POP",
      "path": "1"
    },
    "2373": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2375": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2376": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2377": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2379": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "NOT",
      "path": "1"
    },
    "2380": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2382": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2383": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "ADD",
      "path": "1"
    },
    "2384": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "AND",
      "path": "1"
    },
    "2385": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2386": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "ADD",
      "path": "1"
    },
    "2387": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2388": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2390": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2391": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "POP",
      "path": "1"
    },
    "2392": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2393": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "ADD",
      "path": "1"
    },
    "2394": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2395": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x964"
    },
    "2398": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2399": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2400": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA2"
    },
    "2403": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        5272,
        5318
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2404": {
      "fn": "TokenSwap.swap",
      "offset": [
        5272,
        5318
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2405": {
      "fn": "TokenSwap.swap",
      "offset": [
        5262,
        5318
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2406": {
      "fn": "TokenSwap.swap",
      "offset": [
        5262,
        5318
      ],
      "op": "POP",
      "path": "1"
    },
    "2407": {
      "fn": "TokenSwap.swap",
      "offset": [
        5329,
        5338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2409": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5343
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2410": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2411": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5349
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2412": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x972"
    },
    "2415": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2416": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5349
      ],
      "op": "POP",
      "path": "1"
    },
    "2417": {
      "fn": "TokenSwap.swap",
      "offset": [
        5347,
        5349
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2418": {
      "fn": "TokenSwap.swap",
      "offset": [
        5341,
        5349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2419": {
      "fn": "TokenSwap.swap",
      "offset": [
        5329,
        5349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2420": {
      "fn": "TokenSwap.swap",
      "offset": [
        5329,
        5349
      ],
      "op": "POP",
      "path": "1"
    },
    "2421": {
      "branch": 30,
      "fn": "TokenSwap.swap",
      "offset": [
        5368,
        5372
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 17
    },
    "2422": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B3"
    },
    "2425": {
      "branch": 30,
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2426": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2428": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2435": {
      "op": "SHL"
    },
    "2436": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2437": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2440": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2442": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2443": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "ADD",
      "path": "1"
    },
    "2444": {
      "op": "MSTORE"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2449": {
      "op": "DUP3"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "op": "PUSH15",
      "value": "0x2A37B5B2B7103737BA1039B2B73A17"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2473": {
      "op": "DUP3"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "MSTORE"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2478": {
      "op": "ADD"
    },
    "2479": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "2482": {
      "op": "JUMP"
    },
    "2483": {
      "fn": "TokenSwap.swap",
      "offset": [
        5360,
        5392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2484": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2485": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2486": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2487": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2488": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2489": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2490": {
      "fn": "TokenSwap.swap",
      "offset": [
        4518,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2491": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2492": {
      "fn": "TokenSwap.swap",
      "offset": [
        4443,
        5399
      ],
      "op": "POP",
      "path": "1"
    },
    "2493": {
      "fn": "TokenSwap.swap",
      "jump": "o",
      "offset": [
        4443,
        5399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2494": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1736,
        1934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2495": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1797,
        1820
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2503": {
      "op": "SHL"
    },
    "2504": {
      "op": "SUB"
    },
    "2505": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1844,
        1865
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 18
    },
    "2506": {
      "branch": 31,
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1844,
        1865
      ],
      "op": "AND",
      "path": "1"
    },
    "2507": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA06"
    },
    "2510": {
      "branch": 31,
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2511": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2513": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2520": {
      "op": "SHL"
    },
    "2521": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2522": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2525": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2527": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2528": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "ADD",
      "path": "1"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2534": {
      "op": "DUP3"
    },
    "2535": {
      "op": "ADD"
    },
    "2536": {
      "op": "MSTORE"
    },
    "2537": {
      "op": "PUSH13",
      "value": "0x24B73B30B634B2103A37B5B2B7"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2553": {
      "op": "SHL"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2556": {
      "op": "DUP3"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2561": {
      "op": "ADD"
    },
    "2562": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "2565": {
      "op": "JUMP"
    },
    "2566": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1836,
        1883
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2567": {
      "op": "POP"
    },
    "2568": {
      "fn": "TokenSwap.initiateToken",
      "offset": [
        1919,
        1926
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 19
    },
    "2569": {
      "fn": "TokenSwap.initiateToken",
      "jump": "o",
      "offset": [
        1736,
        1934
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2570": {
      "op": "JUMPDEST"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2575": {
      "op": "DUP3"
    },
    "2576": {
      "op": "DUP5"
    },
    "2577": {
      "op": "SUB"
    },
    "2578": {
      "op": "SLT"
    },
    "2579": {
      "op": "ISZERO"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2583": {
      "op": "JUMPI"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2586": {
      "op": "DUP1"
    },
    "2587": {
      "op": "REVERT"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "DUP2"
    },
    "2590": {
      "op": "CALLDATALOAD"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "op": "SUB"
    },
    "2599": {
      "op": "DUP2"
    },
    "2600": {
      "op": "AND"
    },
    "2601": {
      "op": "DUP2"
    },
    "2602": {
      "op": "EQ"
    },
    "2603": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2606": {
      "op": "JUMPI"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2609": {
      "op": "DUP1"
    },
    "2610": {
      "op": "REVERT"
    },
    "2611": {
      "op": "JUMPDEST"
    },
    "2612": {
      "op": "SWAP4"
    },
    "2613": {
      "op": "SWAP3"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "op": "POP"
    },
    "2616": {
      "op": "POP"
    },
    "2617": {
      "jump": "o",
      "op": "JUMP"
    },
    "2618": {
      "op": "JUMPDEST"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2621": {
      "op": "DUP1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2624": {
      "op": "DUP4"
    },
    "2625": {
      "op": "DUP6"
    },
    "2626": {
      "op": "SUB"
    },
    "2627": {
      "op": "SLT"
    },
    "2628": {
      "op": "ISZERO"
    },
    "2629": {
      "op": "PUSH2",
      "value": "0xA4D"
    },
    "2632": {
      "op": "JUMPI"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2635": {
      "op": "DUP1"
    },
    "2636": {
      "op": "REVERT"
    },
    "2637": {
      "op": "JUMPDEST"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "DUP1"
    },
    "2641": {
      "op": "CALLDATALOAD"
    },
    "2642": {
      "op": "SWAP3"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "SWAP1"
    },
    "2646": {
      "op": "SWAP2"
    },
    "2647": {
      "op": "ADD"
    },
    "2648": {
      "op": "CALLDATALOAD"
    },
    "2649": {
      "op": "SWAP2"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "jump": "o",
      "op": "JUMP"
    },
    "2652": {
      "op": "JUMPDEST"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2655": {
      "op": "DUP1"
    },
    "2656": {
      "op": "DUP3"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2660": {
      "op": "SWAP1"
    },
    "2661": {
      "op": "DUP3"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "PUSH19",
      "value": "0x2737BA1030903B30B634B21039B2B73232B917"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2689": {
      "op": "DUP3"
    },
    "2690": {
      "op": "ADD"
    },
    "2691": {
      "op": "MSTORE"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2694": {
      "op": "ADD"
    },
    "2695": {
      "op": "SWAP1"
    },
    "2696": {
      "jump": "o",
      "op": "JUMP"
    },
    "2697": {
      "op": "JUMPDEST"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2702": {
      "op": "DUP3"
    },
    "2703": {
      "op": "DUP5"
    },
    "2704": {
      "op": "SUB"
    },
    "2705": {
      "op": "SLT"
    },
    "2706": {
      "op": "ISZERO"
    },
    "2707": {
      "op": "PUSH2",
      "value": "0xA9B"
    },
    "2710": {
      "op": "JUMPI"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2713": {
      "op": "DUP1"
    },
    "2714": {
      "op": "REVERT"
    },
    "2715": {
      "op": "JUMPDEST"
    },
    "2716": {
      "op": "POP"
    },
    "2717": {
      "op": "MLOAD"
    },
    "2718": {
      "op": "SWAP2"
    },
    "2719": {
      "op": "SWAP1"
    },
    "2720": {
      "op": "POP"
    },
    "2721": {
      "jump": "o",
      "op": "JUMP"
    },
    "2722": {
      "op": "JUMPDEST"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "DUP5"
    },
    "2729": {
      "op": "SUB"
    },
    "2730": {
      "op": "SLT"
    },
    "2731": {
      "op": "ISZERO"
    },
    "2732": {
      "op": "PUSH2",
      "value": "0xAB4"
    },
    "2735": {
      "op": "JUMPI"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2738": {
      "op": "DUP1"
    },
    "2739": {
      "op": "REVERT"
    },
    "2740": {
      "op": "JUMPDEST"
    },
    "2741": {
      "op": "DUP2"
    },
    "2742": {
      "op": "MLOAD"
    },
    "2743": {
      "op": "DUP1"
    },
    "2744": {
      "op": "ISZERO"
    },
    "2745": {
      "op": "ISZERO"
    },
    "2746": {
      "op": "DUP2"
    },
    "2747": {
      "op": "EQ"
    },
    "2748": {
      "op": "PUSH2",
      "value": "0xA33"
    },
    "2751": {
      "op": "JUMPI"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2754": {
      "op": "DUP1"
    },
    "2755": {
      "op": "REVERT"
    }
  },
  "sha1": "0366c79dd863d21c030dfac10adb791b41e1945c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.6.0;\nimport \"./Interfaces/IERC20.sol\";\n\n/*\n * @title: \n * @author: Anthony (fps) https://github.com/fps8k.\n * @dev: \n * The contract below demonstrate a swap of two tokens between two parties at the same time (atomic).\n *\n * Alice owns token 1.\n * Bob owns token 2.\n * The function in contract below will execute successfully only if it can swap both tokens at the same exact time.\n * Think about the future possibilities of this type of exchange. \n * This contract eliminates the need of trust between two parties.\n *\n *\n * Can we make this contract more open?\n*/\n\ncontract TokenSwap\n{\n    /*\n    * @dev: Struct:: Pair.\n    *\n    * Data mapped to an address, each address has a unique map.\n    * It contains:\n    * - The user's `token`.\n    * - The users preferred `partners`.\n    * - `allowed`, which is true if the `parter` has accepted the pair with the owner.\n    */\n\n    struct Pair\n    {\n        IERC20 token;\n        address partner;\n        bool allowed;\n    }\n\n\n    /*\n    * @dev: Mapping:: partners.\n    *\n    * mapping an the `msg.sender`'s address to his own Pair struct.\n    */\n\n    mapping(address => Pair) public partners;\n\n\n    /*\n    * @dev: Events.\n    *\n    * Emitted on specific functions.\n    */\n\n    event RegisterPair(address, address, address);  // Owner, token, partner.\n\n\n\n\n    /*\n    * @dev: Modifier isValidSender.\n    *\n    * Requires that the `msg.sender` is not a 0 address.\n    */\n\n    modifier isValidSender()\n    {\n        require(msg.sender != address(0), \"Not a valid sender.\");\n        _;\n    }\n\n\n\n\n    /*\n    * @devL initiateToken(address __token).\n    *\n    * Initialized a new token for the person who choses to register a new pair.\n    */\n    function initiateToken(address __token) private pure returns(IERC20 initalized_token)\n    {\n        require(__token != address(0), \"Invalid token\");\n        initalized_token = IERC20(__token);\n    }\n\n\n\n\n    /*\n    * @dev: register().\n    *\n    * Creates a new user with initialized `_token`.\n    */\n\n    function register(address _token) public isValidSender\n    {\n        IERC20 ini_token = initiateToken(_token);\n        partners[msg.sender].token = ini_token;\n    }\n    \n    \n    \n    \n    /*\n    * @dev: registerPartner(address _token, address _partner).\n    *\n    * `msg.sender` creates a new pair with `_token` and choses `_partner` as partners.\n    *\n    * Conditions:\n    *\n    * The `msg.sender` has no created pairs yet.\n    */\n\n    function registerPartner(address _partner) public isValidSender\n    {\n        require(partners[msg.sender].partner == address(0), \"You have a pair already, close it.\");\n        require(_partner != address(0), \"Invalid partners address\");\n        require(msg.sender != _partner, \"You cannot be your own partners\");\n        require(partners[_partner].token != IERC20(address(0)), \"Partner inexistent.\");\n        \n        partners[msg.sender].partner = _partner;\n    }\n    \n\n\n\n    /*\n    * @dev: acceptPair(address _address).\n    *\n    * `msg.sender` accepts to be the `partner` proposed by the `_address`.\n    * The `_address` here is the person who requested through registerPair().\n    * The allowed is set to true.\n    */\n\n    function acceptPair(address _address) public isValidSender\n    {\n        require(_address != address(0), \"Address is invalid\");\n        require(partners[_address].partner == msg.sender, \"You are not partnerss.\");\n\n        partners[_address].allowed = true;\n    }\n\n\n\n\n    /*\n    * @dev: rejectPair(address _address).\n    *\n    * `msg.sender` rejects to be the `partner` proposed by the `_address`.\n    * The `_address` here is the person who requested through registerPair().\n    * The allowed is set to false.\n    */\n    \n    function rejectPair(address _address) public isValidSender\n    {\n        require(_address != address(0), \"Address is invalid\");\n        require(partners[_address].partner == msg.sender, \"You are not partnerss.\");\n\n        partners[_address].allowed = false;\n    }\n\n\n\n\n    /*\n    * @dev: swap(uint256 _amount1, uint256 _amount2).\n    * \n    * Swaps tokens between two persons.\n    * `msg.sender` must have a `partner` with the `allowed` set to `true`.\n    * The `partner` must have his own `token`.\n    * The `allowance` from the both of them wrt to the contract must be greater than the `_amount1` and `_amount2` for `msg.sender` and `partner` respectively.\n    * \n    * Make the transferFrom.\n    */\n    \n    function swap(uint256 _amount1, uint256 _amount2) public isValidSender\n    {\n        require(partners[msg.sender].partner != address(0), \"You have no partner for this swap.\");\n        require(partners[msg.sender].allowed, \"You are not allowed to.\");\n\n\n        address _partner = partners[msg.sender].partner;\n        require(partners[_partner].token != IERC20(address(0)), \"Your partner has no tokens.\");\n\n        address owner = msg.sender;\n\n        IERC20 token1 = partners[owner].token;\n        IERC20 token2 = partners[_partner].token;\n\n        require(token1.allowance(owner, address(this)) >= _amount1, \"Token 1 Allowance > amount.\");\n        require(token2.allowance(_partner, address(this)) >= _amount2, \"Token 2 Allowance > amount.\");\n\n        bool s1 = token1.transferFrom(owner, _partner, _amount1);\n        bool s2 = token2.transferFrom(_partner, owner, _amount1);\n\n        bool sent = s1 && s2;\n\n        require(sent, \"Token not sent.\");\n    }\n}",
  "sourceMap": "617:4784:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/TokenSwap.sol",
  "type": "contract"
}